from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.nearby_stations_response_inner_coordinates import NearbyStationsResponseInnerCoordinates
from openapi_server.models.nearby_stations_response_inner_total_votes import NearbyStationsResponseInnerTotalVotes
from openapi_server import util

from openapi_server.models.nearby_stations_response_inner_coordinates import NearbyStationsResponseInnerCoordinates  # noqa: E501
from openapi_server.models.nearby_stations_response_inner_total_votes import NearbyStationsResponseInnerTotalVotes  # noqa: E501

class NearbyStationsResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, station_name=None, coordinates=None, photo_urls=None, total_votes=None):  # noqa: E501
        """NearbyStationsResponseInner - a model defined in OpenAPI

        :param id: The id of this NearbyStationsResponseInner.  # noqa: E501
        :type id: str
        :param station_name: The station_name of this NearbyStationsResponseInner.  # noqa: E501
        :type station_name: str
        :param coordinates: The coordinates of this NearbyStationsResponseInner.  # noqa: E501
        :type coordinates: NearbyStationsResponseInnerCoordinates
        :param photo_urls: The photo_urls of this NearbyStationsResponseInner.  # noqa: E501
        :type photo_urls: List[str]
        :param total_votes: The total_votes of this NearbyStationsResponseInner.  # noqa: E501
        :type total_votes: NearbyStationsResponseInnerTotalVotes
        """
        self.openapi_types = {
            'id': str,
            'station_name': str,
            'coordinates': NearbyStationsResponseInnerCoordinates,
            'photo_urls': List[str],
            'total_votes': NearbyStationsResponseInnerTotalVotes
        }

        self.attribute_map = {
            'id': '_id',
            'station_name': 'stationName',
            'coordinates': 'coordinates',
            'photo_urls': 'photoUrls',
            'total_votes': 'totalVotes'
        }

        self._id = id
        self._station_name = station_name
        self._coordinates = coordinates
        self._photo_urls = photo_urls
        self._total_votes = total_votes

    @classmethod
    def from_dict(cls, dikt) -> 'NearbyStationsResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NearbyStationsResponse_inner of this NearbyStationsResponseInner.  # noqa: E501
        :rtype: NearbyStationsResponseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this NearbyStationsResponseInner.

        ステーションのID。  # noqa: E501

        :return: The id of this NearbyStationsResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this NearbyStationsResponseInner.

        ステーションのID。  # noqa: E501

        :param id: The id of this NearbyStationsResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def station_name(self) -> str:
        """Gets the station_name of this NearbyStationsResponseInner.

        ステーションの名前。  # noqa: E501

        :return: The station_name of this NearbyStationsResponseInner.
        :rtype: str
        """
        return self._station_name

    @station_name.setter
    def station_name(self, station_name: str):
        """Sets the station_name of this NearbyStationsResponseInner.

        ステーションの名前。  # noqa: E501

        :param station_name: The station_name of this NearbyStationsResponseInner.
        :type station_name: str
        """

        self._station_name = station_name

    @property
    def coordinates(self) -> NearbyStationsResponseInnerCoordinates:
        """Gets the coordinates of this NearbyStationsResponseInner.


        :return: The coordinates of this NearbyStationsResponseInner.
        :rtype: NearbyStationsResponseInnerCoordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: NearbyStationsResponseInnerCoordinates):
        """Sets the coordinates of this NearbyStationsResponseInner.


        :param coordinates: The coordinates of this NearbyStationsResponseInner.
        :type coordinates: NearbyStationsResponseInnerCoordinates
        """

        self._coordinates = coordinates

    @property
    def photo_urls(self) -> List[str]:
        """Gets the photo_urls of this NearbyStationsResponseInner.

        アップロードされた写真のURLリスト。  # noqa: E501

        :return: The photo_urls of this NearbyStationsResponseInner.
        :rtype: List[str]
        """
        return self._photo_urls

    @photo_urls.setter
    def photo_urls(self, photo_urls: List[str]):
        """Sets the photo_urls of this NearbyStationsResponseInner.

        アップロードされた写真のURLリスト。  # noqa: E501

        :param photo_urls: The photo_urls of this NearbyStationsResponseInner.
        :type photo_urls: List[str]
        """

        self._photo_urls = photo_urls

    @property
    def total_votes(self) -> NearbyStationsResponseInnerTotalVotes:
        """Gets the total_votes of this NearbyStationsResponseInner.


        :return: The total_votes of this NearbyStationsResponseInner.
        :rtype: NearbyStationsResponseInnerTotalVotes
        """
        return self._total_votes

    @total_votes.setter
    def total_votes(self, total_votes: NearbyStationsResponseInnerTotalVotes):
        """Sets the total_votes of this NearbyStationsResponseInner.


        :param total_votes: The total_votes of this NearbyStationsResponseInner.
        :type total_votes: NearbyStationsResponseInnerTotalVotes
        """

        self._total_votes = total_votes
